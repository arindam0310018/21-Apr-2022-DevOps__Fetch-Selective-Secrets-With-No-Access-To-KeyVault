trigger:
  none

######################
#DECLARE VARIABLES:-
######################
variables:
  SubscriptionID: 210e66cb-55cf-424e-8daa-6cad804ab604
  ServiceConnection: amcloud-cicd-service-connection
  KVName: ampockv
  Artifact: AM
  KVTag: "RequiredBy: CloudProvider" 
  KVNoTag: "{}"
  
#########################
# Declare Build Agents:-
#########################
pool:
  vmImage: windows-latest

###################
# Declare Stages:-
###################
stages:

- stage: USECASE_DISPLAY_ALL_SECRETS_AND_VALUES
  jobs:
  - job: DISPLAY_SECRETS_AND_VALUES
    displayName: DISPLAY SECRETS AND VALUES
    steps:

########################################################################
# Azure Key Vault Task.
# Display the name of Key Vault.
# Display the No. of Secrets found in Key Vault.
# Display the No. of enabled and unexpired Secrets found in Key Vault.
# Downloads values of Each Secret in Key Vault.
########################################################################

    - task: AzureKeyVault@2
      displayName: AZ KEYVAULT TASK
      inputs:
        azureSubscription: '$(ServiceConnection)'
        KeyVaultName: '$(KVName)'
        SecretsFilter: '*'
        RunAsPreJob: false

#######################################################
# Integers can be compared with these operators:
#   -eq # Equal
#   -ne # Not equal
#   -lt # Less than
#   -le # Less than or equal
#   -gt # Greater than
#   -ge # Greater than or equal
#######################################################

###############################################################
# Export the Secret with Tags only to Secrets Text File
# Copy the Secrets Text file to Artifacts Staging Directory.
###############################################################

    # - task: AzureCLI@2
    #   displayName: FETCH ALL SECRETS WITH TAGS
    #   inputs:
    #     azureSubscription: '$(ServiceConnection)'
    #     scriptType: ps
    #     scriptLocation: inlineScript
    #     inlineScript: |
    #       az --version
    #       az account set --subscription $(SubscriptionID)
    #       az account show
    #       $count = az keyvault secret list --vault-name $(KVName) --query "[] | length(@)"
    #       For ($i=0; $i -lt $count; $i++) {
    #       $sectag = az keyvault secret list --vault-name $(KVName) --query [$i].tags -o yaml
    #       if($sectag -eq "$(KVNoTag)") {
    #       $secretname = az keyvault secret list --vault-name $(KVName) --query [$i].name -o tsv
    #       echo "THERE IS NO TAGS FOR THE $secretname"
    #         }
    #       else {
    #       $secretname = az keyvault secret list --vault-name $(KVName) --query [$i].name -o tsv
    #       $secretvalue = az keyvault secret show --vault-name $(KVName) --name $secretname --query value -o tsv
    #       echo ($secretname + ':' + $secretvalue) >> Secrets.txt
    #       echo "VALUE of $secretname IS EXPORTED TO SECRETS TEXT FILE"
    #       }
    #       }

#################################################################################################
# Export the Secret with Specific Tag "RequiredBy: CloudProvider" only to Secrets Text File
# Copy the Secrets Text file to Artifacts Staging Directory.
#################################################################################################

    - task: AzureCLI@2
      displayName: FETCH ALL SECRETS WITH SPECIFIC TAGS
      inputs:
        azureSubscription: '$(ServiceConnection)'
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          az --version
          az account set --subscription $(SubscriptionID)
          az account show
          $count = az keyvault secret list --vault-name $(KVName) --query "[] | length(@)"
          For ($i=0; $i -lt $count; $i++) {
          $sectag = az keyvault secret list --vault-name $(KVName) --query [$i].tags -o yaml
          if($sectag -eq "$(KVNoTag)") {
          $secretname = az keyvault secret list --vault-name $(KVName) --query [$i].name -o tsv
          echo "THERE IS NO TAGS FOR THE $secretname"
            }
          elseif ($sectag -eq "$(KVTag)") {
          $secretname = az keyvault secret list --vault-name $(KVName) --query [$i].name -o tsv
          $secretvalue = az keyvault secret show --vault-name $(KVName) --name $secretname --query value -o tsv
          echo ($secretname + ':' + $secretvalue) >> Secrets.txt
          echo "VALUE of $secretname IS EXPORTED TO SECRETS TEXT FILE"
            }
          else {
          $secretname = az keyvault secret list --vault-name $(KVName) --query [$i].name -o tsv
          echo "There are other TAG(S) configured apart from Tag "$(KVTag)" for $secretname"
          }
          }  

###############################################################
# Copy the Secrets text file to Artifacts Staging Directory:-
###############################################################

    - task: CopyFiles@2
      displayName: COPY TO ARTIFACTS STAGING DIRECTORY
      inputs:
        Contents: Secrets.txt
        targetFolder: '$(Build.ArtifactStagingDirectory)'

###########################
# Publish the Artifacts:-
###########################

    - task: PublishBuildArtifacts@1
      displayName: PUBLISH ARTIFACTS
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(Artifact)'
        publishLocation: 'Container'